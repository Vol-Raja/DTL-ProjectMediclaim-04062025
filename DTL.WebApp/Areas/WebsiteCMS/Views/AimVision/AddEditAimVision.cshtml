@using DTL.WebApp.Areas.WebsiteCMS
@using DTL.Model.Models.CMS;
@model AimVisionModel

@{
    ViewData["Title"] = Model.IsNew ? "Add AimVision" : Model.ViewOnly ? "View AimVision" : "Edit AimVision";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row header_section mx-0 px-0">
        <div class="col-6 position-relative ps-0">
            <span class="btn btn-light float-start mt-1 me-2 d-block d-md-none" id="menu_toggle">
                <i class="fa-solid fa-bars"></i>
            </span>
            <h3 class="mb-0">Add AimVision </h3>
        </div>

        <p class="mb-0 col-6 top_link_Section">
            <a href="@Url.Action("Index","Home",new { Area="" })"><span class="">Dashboard </span> </a>
            <span class="px-1">/</span>
            <a href="@Url.Action("Index", StringConstants.DASHBOARD, new { Area = StringConstants.CMS_AREA })"><span>CMS</span></a>
            <span class="px-1">/</span>
            <a href="@Url.Action("Index", StringConstants.CMS_AIMVISION, new { Area = StringConstants.CMS_AREA })"><span>Aim Vision List</span></a>

            <span class="px-1">/</span>
            <span>@(Model.IsNew ? "Add Aim Vision" : Model.ViewOnly ? "View Aim Vision" : "Edit Aim Vision")</span>
        </p>

    </div>

    <div class="card border-card mt-0">

        <div class="card-body">
            <form id="AddAimVisionForm" method="post" action="@Url.Action(StringConstants.CMS_SAVE, StringConstants.CMS_AIMVISION, new { Area = StringConstants.CMS_AREA } )">
                @Html.AntiForgeryToken()
                <input type="hidden" value="@Model.ID" name="ID" id="ID" />
                <input type="hidden" value="@Model.IsNew.ToString()" name="IsNew" id="IsNew" />

                <div class="row">
                    <div class="col-sm-12 col-md-12 mb-3">
                        <label class="form-label d-block mb-1">Aim  <span class="text-danger req_text">*</span></label>
                        <textarea name="AimContent" id="AimContent" class="RichTextContent" disabled="@Model.ViewOnly">@Model.AimContent</textarea>

                    </div>
                    <div class="col-sm-12 col-md-12 mb-3">
                        <label class="form-label d-block mb-1">Aim In Hindi<span class="text-danger req_text">*</span></label>
                        <textarea name="AimContentHindi" id="AimContentHindi" disabled="@Model.ViewOnly" class="RichTextContent">@Model.AimContentHindi</textarea>

                    </div>
                    <div class="col-sm-12 col-md-12 mb-3">
                        <label class="form-label d-block mb-1"> Vision <span class="text-danger req_text">*</span></label>
                        <textarea name="VisionContent" id="VisionContent" disabled="@Model.ViewOnly" class="RichTextContent">@Model.VisionContent</textarea>
                    </div>
                    <div class="col-sm-12 col-md-12 mb-3">
                        <label class="form-label d-block mb-1"> Vision in Hindi<span class="text-danger req_text">*</span></label>
                        <textarea name="VisionContentHindi" id="VisionContentHindi" disabled="@Model.ViewOnly" class="RichTextContent">@Model.VisionContentHindi</textarea>
                    </div>
                    <div class="col-md-12 mb-3 submit_area submit_area_strip">
                        <button id="btnSubmit" type="submit" class="btn btn-brand me-2 @(Model.ViewOnly ? "hide" :"")">@(Model.IsNew ? "Submit" : "Update")</button>
                        @if (Model.ViewOnly)
                        {
                            <button class="btn btn-cancel me-2" onclick=" location.href='@Url.Action("", StringConstants.CMS_AIMVISION, new { Area = StringConstants.CMS_AREA })'; return false;">Back</button>

                        }
                        else
                        {
                            <button class="btn btn-cancel me-2" onclick="showConfirmSwal('Are you sure you want cancel?', function() {  location.href='@Url.Action("", StringConstants.CMS_AIMVISION, new { Area = StringConstants.CMS_AREA })';}); return false;">Cancel</button>

                        }
                        <button class="btn btn-reset me-2 @(Model.ViewOnly ? "hide" :"")" onclick="showConfirmSwal('Are you sure you want Reset?', function() { window.location.reload();}); return false;">Reset</button>


                      </div>



                </div>
            </form>
        </div>
    </div>

</div>

@section AddEditAimVision{
    <script src="/assets/js/editor.js"></script>
    <script>
        tinymce.init({
            selector: '.RichTextContent',
            readonly: @(Model.ViewOnly ? 1 : 0)
        });

        $(document).ready(function () {
            $('#btnSubmit').click(function (e) {
                tinymce.triggerSave();

                if ($("#AddAimVisionForm").valid() == false)
                    return false;

                showConfirmSwal("Are you sure you want to submit?", function () {
                   $('#AddAimVisionForm').submit();
                });

                return false;
            });
        });

        $('#AddAimVisionForm').validate({
            ignore: ':hidden:not(textarea)',
            rules: {

                AimContent: {
                    required: true

                },
                AimContentHindi: {
                    required: true,
                },
                VisionContent: {
                    required: true,
                },
                VisionContentHindi: {
                    required: true,
                }

            },
            messages: {
              
            },
            errorElement: 'span',
            errorPlacement: function (error, element) {
                error.addClass('invalid-feedback');
                error.insertAfter($(element));
                //element.closest('.form-group').append(error);
            },
            highlight: function (element, errorClass, validClass) {
                $(element).addClass('is-invalid');
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).removeClass('is-invalid');
            }

        });
    </script>
}