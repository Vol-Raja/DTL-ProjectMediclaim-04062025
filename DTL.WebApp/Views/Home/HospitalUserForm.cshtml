@using DTL.Model.Models.UserManagement
@{
    ViewData["Title"] = Model.ID == default ? "Add Hospital User" : Model.IsReadOnly ? "View Hospital User" : "Edit Hospital User";

    Layout = "~/Views/Shared/_Layout.cshtml";

}
@model HospitalUserModel
<style type="text/css">

</style>

<div class="container-fluid">
    <div class="row header_section mx-0 px-0">
        <div class="col-6 position-relative ps-0">
            <span class="btn btn-light float-start mt-1 me-2 d-block d-md-none" id="menu_toggle">
                <i class="fa-solid fa-bars"></i>
            </span>
            <h3 class="mb-0">@ViewData["Title"]</h3>
        </div>
        <p class="mb-0 col-6 top_link_Section">
            <a href="@Url.Action("Index","Home",new { Area="" })"><span class="">Dashboard </span> </a>
            <span class="px-1">/</span>
            <span>@ViewData["Title"]</span>
        </p>
    </div>
    <div class="card border-card mt-0">
        <form id="HospitalUserForm">
            <input type="hidden" id="ID" name="ID" value="@Model.ID" />
            <input type="hidden" id="HospitalUserId" name="HospitalUserId" value="@Model.HospitalUserId" />
            <div class="card-body">
                <div class="row">
                    <div class="col-sm-6 mb-3">
                        <label class="form-label d-block mb-1">Name of hospital<span class="text-danger req_text">*</span></label>
                        <input type="text" name="NameOfHospital" value="@Model.NameOfHospital" disabled="disabled" class="form-control form-control-sm" placeholder="Name Of Hospital" />

                        <select style="display:none" name="" id="" class="form-select form-select-sm">
                            <option value="">Select</option>

                        </select>
                    </div>
                    <div class="col-sm-6 mb-3">
                        <label class="form-label d-block mb-1">Email id<span class="text-danger req_text">*</span></label>
                        <input type="email" name="EmailAddress" value="@Model.EmailAddress" disabled="@Model.IsReadOnly" class="form-control form-control-sm" placeholder="Email Id" />
                    </div>
                    <div class="col-sm-6 mb-3">
                        <label class="form-label d-block mb-1">Contact No.<span class="text-danger req_text">*</span></label>
                        <input type="number" name="PhoneNumber" value="@Model.PhoneNumber" disabled="@Model.IsReadOnly" class="form-control form-control-sm" placeholder="Contact No." />
                    </div>

                    <div class="col-sm-6 mb-3">
                        <label class="form-label d-block mb-1">Name of Authorized Person<span class="text-danger req_text">*</span></label>
                        <input type="text" name="AuthorizedPerson" value="@Model.AuthorizedPerson" disabled="disabled" class="form-control form-control-sm" placeholder="Name of Authorized Person" />
                    </div>
                    <div class="col-sm-6 mb-3">
                        <label class="form-label d-block mb-1">User Name<span class="text-danger req_text">*</span></label>
                        <input type="text" name="Username" value="@Model.Username" disabled="disabled" class="form-control form-control-sm" placeholder="User name" />
                    </div>



                    <div class="col-sm-6 mb-3">
                        <label class="form-label d-block mb-1">Address<span class="text-danger req_text">*</span></label>
                        <textarea name="Address" value="@Model.Address" disabled="@Model.IsReadOnly" class="form-control form-control-sm" placeholder="Address">@Model.Address</textarea>
                    </div>


                    <div class="col-md-12 mb-3 submit_area submit_area_strip">
                        @if (Model.IsReadOnly == false)
                        {
                            <button class="btn btn-brand me-2" id="btnSubmit" role="button">@(Model.ID == default ? "Submit" : "Update")</button>
                            <a onclick="showConfirmSwal('Are you sure you want cancel?',function(){ location.href='/home/';  }); return false;" class="btn btn-cancel me-2" role="button">Cancel</a>
                            <button class="btn btn-reset me-2" onclick="location.reload();return false;">Reset</button>
                        }
                        else
                        {
                            <a onclick="showConfirmSwal('Are you sure you want go back?',function(){ location.href='/home/';  }); return false;" class="btn btn-cancel me-2" role="button">Back</a>

                        }
                    </div>



                </div>
            </div>
        </form>
    </div>

</div>


<script>
    $(document).ready(function () {
        $('#btnSubmit').click(function (e) {
            e.preventDefault();
            if ($("#HospitalUserForm").valid() == false)
                return false;
            showConfirmSwal("Are you sure you want to submit?", function () {
                var formData = BindHospitalUserFormData();
                var url = '/home/UpdateHospitalUser';
                $.ajax({

                    type: "POST",
                    dataType: "json",
                    data: formData,
                    contentType: false,
                    processData: false,
                    url: url,


                    success: function (response, status, xhr) {
                        if (xhr.status == 200) {
                            if (response == 'userExists') {
                                hideLoader();
                                showErrorSwal("Email Id is already used");
                                return;
                            }
                            if (response == 'DuplicateUserName') {
                                hideLoader();
                                showErrorSwal("Username is already used");
                                return;
                            }
                            else {
                                showSuccessSwal("Data saved!!");
                            }
                        }

                        setTimeout(function () {
                            window.location.href = '/home/';
                        }, 2000);
                    },
                    error: function (xhr, status, error) {
                        hideLoader();
                        showErrorSwal('Error-' + error);
                        //toastr.error("Something went wrong!!")
                    }
                });
            });
        })
    });


    $('#HospitalUserForm').validate({
        rules: {
            NameOfHospital: {
                required: true,
            },
            EmailAddress: {
                required: true,
                email: true

            }
            , PhoneNumber: {
                required: true,
                number: true,
                minlength: 10,
                maxlength: 10

            }, AuthorizedPerson: {
                required: true

            }
            , Address: {
                required: true

            },
            Username: {
                required: true,
                minlength: 6,
                regex: /^[a-zA-Z0-9]+$/,
            },
        },
        messages: {
            NameOfHospital: {
                required: "Please provide Name Of Hospital.",
            },
            EmailAddress: {
                required: "Please provide EmailAddress.",

            }
            , PhoneNumber: {
                required: "Please provide Phone Number.",

            }, AuthorizedPerson: {
                required: "Please provide Name Authorized Person.",

            }
            , Address: {
                required: "Please provide Address.",

            }, Username: {
                required: "Please provide Username.",

            }
        },
        errorElement: 'span',
        errorPlacement: function (error, element) {
            error.addClass('invalid-feedback');

            error.insertAfter($(element));
            //element.closest('.form-group').append(error);
        },
        highlight: function (element, errorClass, validClass) {
            $(element).addClass('is-invalid');
        },
        unhighlight: function (element, errorClass, validClass) {
            $(element).removeClass('is-invalid');
        }

    });

    function BindHospitalUserFormData() {
        var frm = $('#HospitalUserForm');
        var formData = new FormData(frm[0]);
        return formData;
    }
</script>